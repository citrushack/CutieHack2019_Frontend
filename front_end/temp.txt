import React, { Component } from 'react';
import { Redirect } from 'react-router-dom';
import './css/Navbar.css';

class Navbar extends Component {
  constructor(props){
    super(props);
    this.state = {
      Authenticated: true,
      redirectToLogin: false,
      redirectToHome: false,
      isTop: true
    }
  }

  componentDidMount() {
    document.addEventListener('scroll', () => {
      const isTop = window.scrollY < 100;
      if (isTop !== this.state.isTop) {
        this.onScroll(isTop);
      }
    });
  }

  onScroll = (isTop) => {
    this.setState({ isTop });
  }

  LoginRedirect = () => {
    window.location.assign('/login')
  }

  HomeRedirect = () => {
    window.location.assign('/')
  }

  changeColor = () => {
    if (this.state.isTop) {
      return       <div>
              <div className="nav">
                <button className="buttons" onClick={this.HomeRedirect}>HOME</button>
                <a className="buttons" href='#section2'>ABOUT</a>
                <button className="buttons">FAQ</button>
                <button className="buttons">SPONSORS</button>
                <button className="buttons">CONTACT</button>
                {this.state.Authenticated ? (
                  <button className="buttons" onClick={this.LoginRedirect}>LOGIN</button>
                ):(
                  <button className="buttons">LOGOUT</button>
                )}
              </div>
            </div>
    }
  }

  render(){
    return(
      <div>
        {this.changeColor}
      </div>
    )
  }
}

export default Navbar;




<div>
  <div className="flex">
    <div className="faqTitle">{this.props.title}</div>
    <Icon onClick={this.handleOpen} className="arrowIcon" type="down" />
  </div>
  {this.state.isOpen &&
  <Animated animationIn="fadeIn" isVisible={true}>
    <p className="faqText">{this.props.body}</p>
  </Animated>
  }
</div>





import React, { Component } from 'react'

export function PasswordReset({ match }) {
  state = {
    password1: ''
  }

  handleChange = (e) => {
    this.setState({[e.target.name]: e.target.value});
  }

  handleReset = () => {
    fetch("http://c1078b2b.ngrok.io/api/passwordReset/", {
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({'password': this.state.password1}),
      method: "POST",
    })
      .then(resp => resp.json())
      .then(resp => {
        if (resp.message) {
          console.log(resp.message)
        }
      })
      .catch(err => console.log(err))
  }


  return (
    <div>
      <input type="password" name="password1" placeholder="password1" value={this.state.password1} onChange={this.handleChange}/>
      <h3>Token: {match.params.token}</h3>
      <button onClick={this.handleSubmit} type="submit">Submit</button>
    </div>
  );
}











<form className="formContainer" onSubmit={this.handleSubmit}>
  <div className="formFlex">
    <div className="firstInner">
      <p className="formText">EMAIL *</p>
      <input className="registerInput" type="email" name="email" placeholder="email" value={this.state.email} onChange={this.handleChange}/>
    </div>
    <div className="firstInner">
      <p className="formText">PASSWORD1 *</p>
      <input className="registerInput" type="password" name="password1" placeholder="password1" value={this.state.password1} onChange={this.handleChange}/>
    </div>
    <div className="firstInner">
      <p className="formText">PASSWORD2 *</p>
      <input className="registerInput" type="password" name="password2" placeholder="password2" value={this.state.password2} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">FIRST NAME *</p>
      <input className="registerInput" type="text" name="first_name" placeholder="first name" value={this.state.first_name} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">LAST NAME *</p>
      <input className="registerInput" type="text" name="last_name" placeholder="last name" value={this.state.last_name} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">SCHOOL *</p>
      <input className="registerInput" type="text" name="school" placeholder="school" value={this.state.school} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">LEVEL OF STUDY *</p>
      <input className="registerInput" type="text" name="level_of_study" placeholder="level of study" value={this.state.level_of_study} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">GRADUATION YEAR *</p>
      <input className="registerInput" type="text" name="graduation_year" placeholder="graduation year" value={this.state.graduation_year} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">MAJOR *</p>
      <input className="registerInput" type="text" name="major" placeholder="major" value={this.state.major} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">GENDER *</p>
      <input className="registerInput" type="text" name="gender" placeholder="gender" value={this.state.gender} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">GENDER OTHER *</p>
      <input className="registerInput" type="text" name="gender_other" placeholder="gender other" value={this.state.gender_other} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">RACE *</p>
      <input className="registerInput" type="text" name="race" placeholder="race" value={this.state.race} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">DATE OF BIRTH *</p>
      <input className="registerInput" type="text" name="date_of_birth" placeholder="date of birth" value={this.state.date_of_birth} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">LINKEDIN *</p>
      <input className="registerInput" type="text" name="linkedin" placeholder="linkedin" value={this.state.linkedin} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">GITHUB *</p>
      <input className="registerInput" type="text" name="github" placeholder="github" value={this.state.github} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">RESUME *</p>
      <input className="registerInput" type="text" name="resume" placeholder="resume" value={this.state.resume} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">PHONE NUMBER *</p>
      <input className="registerInput" type="text" name="phone_number" placeholder="phone number" value={this.state.phone_number} onChange={this.handleChange}/>
    </div>
    <div className="secondInner">
      <p className="formText">SHIRT SIZE *</p>
      <input className="registerInput" type="text" name="shirt_size" placeholder="shirt size" value={this.state.shirt_size} onChange={this.handleChange}/>
    </div>
  </div>
  <div className="formFlex">
    <div className="secondInner">
      <p className="formText">SUBMIT *</p>
      <button type="submit">Submit</button>
    </div>
  </div>
</form>
